{"version":3,"sources":["webpack:///./src/modules/counter/Counter.js","webpack:///./src/modules/counter/Counter.scss?c54c","webpack:///./src/modules/counter/Counter.scss","webpack:///./src/modules/counter/counterReducer.js","webpack:///./~/babel-runtime/helpers/defineProperty.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEO,KAAM,4BAAU,SAAV,OAAU,CAAC,KAAD;AAAA,UACrB;AAAA;KAAA;KACE;AAAA;OAAA,EAAI,WAAW,kBAAQ,gBAAvB;OAAA;OAEG,GAFH;OAGE;AAAA;SAAA,EAAM,WAAW,kBAAQ,gBAAR,CAAjB;SACG,MAAM;AADT;AAHF,MADF;KAQE;AAAA;OAAA,EAAQ,WAAU,iBAAlB,EAAoC,SAAS,MAAM,SAAnD;OAAA;AAAA,MARF;KAWG,GAXH;KAYE;AAAA;OAAA,EAAQ,WAAU,iBAAlB,EAAoC,SAAS,MAAM,WAAnD;OAAA;AAAA;AAZF,IADqB;AAAA,EAAhB;;AAmBP,SAAQ,SAAR,GAAoB;AAClB,YAAS,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,UADd;AAElB,gBAAa,gBAAM,SAAN,CAAgB,IAAhB,CAAqB,UAFhB;AAGlB,cAAW,gBAAM,SAAN,CAAgB,IAAhB,CAAqB;AAHd,EAApB;;;;;;;;;;;AAeA,KAAM,oBAAoB;AACxB,cAAW;AAAA,YAAM,+BAAU,CAAV,CAAN;AAAA,IADa;AAExB;AAFwB,EAA1B;;AAKA,KAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD;AAAA,UAAY;AAClC,cAAS,MAAM;AADmB,IAAZ;AAAA,EAAxB;;;;;;;;;;;;;;;;mBAkBe,yBAAQ,eAAR,EAAyB,iBAAzB,EAA4C,OAA5C,C;;;;;;;AC9Df;;AAEA;AACA;AACA;AACA;AACA,kDAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;ACpBA;AACA;;;AAGA;AACA,qDAAoD,gBAAgB,iCAAiC,cAAc,mCAAmC,gBAAgB,QAAQ,+MAA+M,sBAAsB,GAAG,qBAAqB,sBAAsB,0BAA0B,GAAG,uBAAuB,qBAAqB,GAAG,+BAA+B;;AAE5iB;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;;;;;;;;;;;;;;SCJgB,S,GAAA,S;mBA0CQ,c;;;;;;;AA/CjB,KAAM,gDAAoB,mBAA1B;;;;;AAKA,UAAS,SAAT,GAA8B;AAAA,OAAX,KAAW,yDAAH,CAAG;;AACnC,UAAO;AACL,WAAM,iBADD;AAEL,cAAS;AAFJ,IAAP;AAID;;;;;;;;;;AAUM,KAAM,oCAAc,SAAd,WAAc,GAAM;AAC/B,UAAO,UAAC,QAAD,EAAW,QAAX,EAAwB;AAC7B,YAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,kBAAW,YAAM;AACf,kBAAS,UAAU,WAAW,OAArB,CAAT;AACA;AACD,QAHD,EAGG,GAHH;AAID,MALM,CAAP;AAMD,IAPD;AAQD,EATM;;AAWA,KAAM,4BAAU;AACrB,uBADqB;AAErB;AAFqB,EAAhB;;;;;AAQP,KAAM,oDACH,iBADG,EACiB,UAAC,KAAD,EAAQ,MAAR;AAAA,UAAmB,QAAQ,OAAO,OAAlC;AAAA,EADjB,CAAN;;;;;AAOA,KAAM,eAAe,CAArB;AACe,UAAS,cAAT,GAAsD;AAAA,OAA9B,KAA8B,yDAAtB,YAAsB;AAAA,OAAR,MAAQ;;AACnE,OAAM,UAAU,gBAAgB,OAAO,IAAvB,CAAhB;;AAEA,UAAO,UAAU,QAAQ,KAAR,EAAe,MAAf,CAAV,GAAmC,KAA1C;AACD,E;;;;;;;ACtDD;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;;AAEA;AACA,G","file":"1.counter.72791abe748cb5d3e47b.js","sourcesContent":["import React from 'react'\nimport classes from './Counter.scss'\nimport { connect } from 'react-redux'\nimport { increment, doubleAsync } from './counterReducer'\n\nexport const Counter = (props) => (\n  <div>\n    <h2 className={classes.counterContainer}>\n      Counter:\n      {' '}\n      <span className={classes['counter--green']}>\n        {props.counter}\n      </span>\n    </h2>\n    <button className=\"btn btn-default\" onClick={props.increment}>\n      Increment\n    </button>\n    {' '}\n    <button className=\"btn btn-default\" onClick={props.doubleAsync}>\n      Double (Async)\n    </button>\n  </div>\n)\n\nCounter.propTypes = {\n  counter: React.PropTypes.number.isRequired,\n  doubleAsync: React.PropTypes.func.isRequired,\n  increment: React.PropTypes.func.isRequired\n}\n\n/*  This is a container component. Notice it does not contain any JSX,\n    nor does it import React. This component is **only** responsible for\n    wiring in the actions and state necessary to render a presentational\n    component - in this case, the counter:   */\n\n/*  Object of action creators (can also be function that returns object).\n    Keys will be passed as props to presentational components. Here we are\n    implementing our wrapper around increment; the component doesn't care   */\n\nconst mapActionCreators = {\n  increment: () => increment(1),\n  doubleAsync\n}\n\nconst mapStateToProps = (state) => ({\n  counter: state.counter\n})\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n    import { createSelector } from 'reselect'\n    const counter = (state) => state.counter\n    const tripleCount = createSelector(counter, (count) => count * 3)\n    const mapStateToProps = (state) => ({\n      counter: tripleCount(state)\n    })\n\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n    Selectors are composable. They can be used as input to other selectors.\n    https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapActionCreators)(Counter)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/counter/Counter.js\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!./../../../node_modules/postcss-loader/index.js!./../../../node_modules/sass-loader/index.js?sourceMap!./Counter.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!./../../../node_modules/postcss-loader/index.js!./../../../node_modules/sass-loader/index.js?sourceMap!./Counter.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!./../../../node_modules/postcss-loader/index.js!./../../../node_modules/sass-loader/index.js?sourceMap!./Counter.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/modules/counter/Counter.scss\n ** module id = 419\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".Counter__counter____zpiE{font-weight:700}.Counter__counter--green___2pKoG{color:#19c819}.Counter__counterContainer___2qYUt{margin:1em auto}\", \"\", {\"version\":3,\"sources\":[\"/./src/modules/src/modules/counter/Counter.scss\"],\"names\":[],\"mappings\":\"AAAA,0BACE,eAAkB,CACnB,iCAGmB,aACR,CACX,mCAGC,eAAiB,CAClB\",\"file\":\"Counter.scss\",\"sourcesContent\":[\".counter {\\n  font-weight: bold;\\n}\\n\\n.counter--green {\\n  composes: counter;\\n  color: rgb(25,200,25);\\n}\\n\\n.counterContainer {\\n  margin: 1em auto;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\nexports.locals = {\n\t\"counter\": \"Counter__counter____zpiE\",\n\t\"counter--green\": \"Counter__counter--green___2pKoG Counter__counter____zpiE\",\n\t\"counterContainer\": \"Counter__counterContainer___2qYUt\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap&-minimize&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!./~/postcss-loader!./~/sass-loader?sourceMap!./src/modules/counter/Counter.scss\n ** module id = 420\n ** module chunks = 1\n **/","// ------------------------------------\n// Constants\n// ------------------------------------\nexport const COUNTER_INCREMENT = 'COUNTER_INCREMENT'\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport function increment(value = 1) {\n  return {\n    type: COUNTER_INCREMENT,\n    payload: value\n  }\n}\n\n/*  This is a thunk, meaning it is a function that immediately\n    returns a function for lazy evaluation. It is incredibly useful for\n    creating async actions, especially when combined with redux-thunk!\n\n    NOTE: This is solely for demonstration purposes. In a real application,\n    you'd probably want to dispatch an action of COUNTER_DOUBLE and let the\n    reducer take care of this logic.  */\n\nexport const doubleAsync = () => {\n  return (dispatch, getState) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(increment(getState().counter))\n        resolve()\n      }, 200)\n    })\n  }\n}\n\nexport const actions = {\n  increment,\n  doubleAsync\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [COUNTER_INCREMENT]: (state, action) => state + action.payload\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = 0\nexport default function counterReducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/counter/counterReducer.js\n **/","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/helpers/defineProperty.js\n ** module id = 422\n ** module chunks = 1\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/modules/user/User.js","webpack:///./src/modules/user/userPropTypes.js","webpack:///./src/modules/user/userReducer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;KAEM,I;;;;;;;;;;yCACgB;AAClB,YAAK,KAAL,CAAW,SAAX;AACD;;;8BAEQ;AAAA,oBACoB,KAAK,KADzB;AAAA,WACC,OADD,UACC,OADD;AAAA,WACU,KADV,UACU,KADV;;;AAGP,cACE;AAAA;SAAA,EAAK,WAAU,KAAf;SACG,WACC;AAAA;WAAA,EAAK,WAAU,WAAf;WAAA;AAAA,UAFJ;SAMG,CAAC,OAAD,IACC,MAAM,GAAN,CAAU;AAAA,kBACR;AAAA;aAAA,EAAK,KAAK,KAAK,EAAf,EAAmB,WAAU,6BAA7B;aACG,KAAK;AADR,YADQ;AAAA,UAAV;AAPJ,QADF;AAgBD;;;;;AAGH,MAAK,SAAL,GAAiB;AACf,UAAO,iBAAU,OAAV,CAAkB,iBAAU,KAAV,6BAAlB,CADQ;AAEf,YAAS,iBAAU,IAAV,CAAe,UAFT;AAGf,cAAW,iBAAU,IAAV,CAAe;AAHX,EAAjB;;;;;;;;;;;AAeA,KAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD;AAAA,UAAY;AAClC,cAAS,MAAM,IAAN,CAAW,OADc;AAElC,YAAO,MAAM,IAAN,CAAW;AAFgB,IAAZ;AAAA,EAAxB;;AAKA,KAAM,qBAAqB,SAArB,kBAAqB,CAAC,QAAD;AAAA,UAAc,+BAAmB;AAC1D,gBAAW,sBAAY,IAAZ,CAAiB;AAD8B,IAAnB,EAEtC,QAFsC,CAAd;AAAA,EAA3B;;;;;;;;;;;;;;;;mBAkBe,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,IAA7C,C;;;;;;;;;;;;;ACvEf;;AAEA,KAAM,eAAe;AACnB,OAAI,iBAAU,MAAV,CAAiB,UADF;AAEnB,UAAO,iBAAU,MAAV,CAAiB;AAFL,EAArB;;mBAKe,Y;;;;;;;;;;;;;;;;;ACPf;;;;AAEA,KAAM,eAAe;AACnB,SAAM,EADa;AAEnB,SAAM,IAFa;AAGnB,UAAO,IAHY;AAInB,YAAS;AAJU,EAArB;;mBAOe,YAA6C;AAAA,OAA5C,KAA4C,yDAApC,YAAoC;AAAA;AAAA,OAApB,IAAoB,QAApB,IAAoB;AAAA,OAAd,OAAc,QAAd,OAAc;;AAC1D,WAAQ,IAAR;AACE,UAAK,6BAAgB,IAAhB,CAAqB,OAA1B;AACA,UAAK,6BAAgB,IAAhB,CAAqB,OAA1B;AACE,yCACK,KADL;AAEE,kBAAS;AAFX;;AAKF,UAAK,6BAAgB,IAAhB,CAAqB,OAA1B;AACE,yCACK,KADL;AAEE,eAAM,OAFR;AAGE,gBAAO,IAHT;AAIE,kBAAS;AAJX;;AAOF,UAAK,6BAAgB,IAAhB,CAAqB,OAA1B;AACE,yCACK,KADL;AAEE,eAAM,EAFR;AAGE,gBAAO,OAHT;AAIE,kBAAS;AAJX;;AAOF,UAAK,6BAAgB,IAAhB,CAAqB,OAA1B;AACE,yCACK,KADL;AAEE,eAAM,OAFR;AAGE,gBAAO,IAHT;AAIE,kBAAS;AAJX;;AAOF,UAAK,6BAAgB,IAAhB,CAAqB,OAA1B;AACE,yCACK,KADL;AAEE,eAAM,IAFR;AAGE,gBAAO,OAHT;AAIE,kBAAS;AAJX;;AAOF;AACE,cAAO,KAAP;AAzCJ;AA2CD,E","file":"2.user.72791abe748cb5d3e47b.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport userActions from './userActions'\nimport { UserPropType } from './userPropTypes'\n\nclass User extends Component {\n  componentDidMount() {\n    this.props.loadUsers()\n  }\n\n  render() {\n    const { loading, users } = this.props\n\n    return (\n      <div className=\"row\">\n        {loading &&\n          <div className=\"col-xs-12\">\n            Loading\n          </div>\n        }\n        {!loading &&\n          users.map(user => (\n            <div key={user.id} className=\"col-xs-12 col-md-6 col-lg-3\">\n              {user.login}\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n\nUser.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape(UserPropType)),\n  loading: PropTypes.bool.isRequired,\n  loadUsers: PropTypes.func.isRequired\n}\n\n/*  This is a container component. Notice it does not contain any JSX,\n    nor does it import React. This component is **only** responsible for\n    wiring in the actions and state necessary to render a presentational\n    component - in this case, the user:   */\n\n/*  Object of action creators (can also be function that returns object).\n    Keys will be passed as props to presentational components. Here we are\n    implementing our wrapper around increment; the component doesn't care   */\n\nconst mapStateToProps = (state) => ({\n  loading: state.user.loading,\n  users: state.user.list\n})\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  loadUsers: userActions.list.request\n}, dispatch)\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n    import { createSelector } from 'reselect'\n    const user = (state) => state.user\n    const tripleCount = createSelector(user, (count) => count * 3)\n    const mapStateToProps = (state) => ({\n      user: tripleCount(state)\n    })\n\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n    Selectors are composable. They can be used as input to other selectors.\n    https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/user/User.js\n **/","import { PropTypes } from 'react'\n\nconst UserPropType = {\n  id: PropTypes.number.isRequired,\n  login: PropTypes.string.isRequired\n}\n\nexport default UserPropType\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/user/userPropTypes.js\n **/","import { userActionTypes } from './userActions'\n\nconst initialState = {\n  list: [],\n  item: null,\n  error: null,\n  loading: false\n}\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case userActionTypes.list.REQUEST:\n    case userActionTypes.item.REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n\n    case userActionTypes.list.SUCCESS:\n      return {\n        ...state,\n        list: payload,\n        error: null,\n        loading: false\n      }\n\n    case userActionTypes.list.FAILURE:\n      return {\n        ...state,\n        list: [],\n        error: payload,\n        loading: false\n      }\n\n    case userActionTypes.item.SUCCESS:\n      return {\n        ...state,\n        item: payload,\n        error: null,\n        loading: false\n      }\n\n    case userActionTypes.item.FAILURE:\n      return {\n        ...state,\n        item: null,\n        error: payload,\n        loading: false\n      }\n\n    default:\n      return state\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/user/userReducer.js\n **/"],"sourceRoot":""}